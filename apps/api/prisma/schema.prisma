// ===================================================
// Prisma Schema — platform_agents (by fmonfasani)
// ===================================================

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

// ===================================================
// MODELS
// ===================================================

model Agent {
  id          String     @id @default(uuid())
  name        String
  area        String
  description String?
  area        String?
  uses        Int         @default(0)
  downloads   Int         @default(0)
  rewards     Int         @default(0)
  stars       Float       @default(0)
  votes       Int         @default(0)
  openaiAgentId String?
  model         String?    @default("gpt-4.1-mini")
  instructions  String?
  updatedAt   DateTime    @updatedAt
  usages      AgentUsage[]
  traces      AgentTrace[]
}

model Metrics {
  id         String  @id @default(uuid())
  uses       Int     @default(0)
  downloads  Int     @default(0)
  rewards    Int     @default(0)

  // Relación 1:1 con Agent
  agentId    String  @unique
  agent      Agent   @relation(fields: [agentId], references: [id], onDelete: Cascade)
}

model Workflow {
  id        String   @id @default(uuid())
  name      String
  status    String   @default("ready")
  model     String   @default("gpt-4o")
  platform  String   @default("OpenAI")
  action    String?
  value     Float?

  // Relación N:1 con Agent
  agentId   String
  agent     Agent    @relation(fields: [agentId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
}

model AgentTrace {
  id         String   @id @default(uuid())
  agentId    String
  runId      String
  status     String
  grade      Float?
  evaluator  String?
  traceUrl   String?
  input      String?
  output     String?
  createdAt  DateTime @default(now())
  Agent      Agent   @relation(fields: [agentId], references: [id], onDelete: Cascade)
}
